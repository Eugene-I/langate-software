/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.contacts-list, #nav, .section-recognize .users-group ul {
  margin: 0;
  padding: 0;
  list-style: none; }

.ellipsis {
  white-space: nowrap;
  /* 1 */
  text-overflow: ellipsis;
  /* 2 */
  overflow: hidden; }

html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

* {
  max-height: 1000000px; }

body {
  background: #fff;
  color: #2b2b2b;
  font: 300 20px/1.3 "Open Sans", "Arial", "Helvetica Neue", "Helvetica", sans-serif;
  min-width: 320px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

img {
  max-width: 100%;
  height: auto;
  vertical-align: top; }

video, iframe, object, embed {
  max-width: 100%;
  display: block; }

#__bs_notify__ {
  display: none; }

.gm-style img {
  max-width: none; }

blockquote, blockquote:before, blockquote:after, q, q:before, q:after {
  quotes: none; }

blockquote:before, blockquote:after, q:before, q:after {
  content: ''; }

.resize-active #header * {
  transition: none !important; }

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6,
.h {
  color: #2b2b2b;
  font-family: "Futura Std", "Open Sans", "Arial", "Helvetica Neue", "Helvetica", sans-serif;
  font-weight: normal;
  margin: 0 0 0.5em;
  text-transform: uppercase; }
  h1 a, .h1 a,
  h2 a, .h2 a,
  h3 a, .h3 a,
  h4 a, .h4 a,
  h5 a, .h5 a,
  h6 a, .h6 a,
  .h a {
    color: inherit; }
    h1 a:hover, .h1 a:hover,
    h2 a:hover, .h2 a:hover,
    h3 a:hover, .h3 a:hover,
    h4 a:hover, .h4 a:hover,
    h5 a:hover, .h5 a:hover,
    h6 a:hover, .h6 a:hover,
    .h a:hover {
      color: #f78f1e;
      text-decoration: none; }

h1, .h1 {
  color: #5e6a77;
  font-size: 29px;
  margin: 0 0 38px; }

h2, .h2 {
  font-size: 23px; }

/*h3, .h3 {
	font-size: $h3-font-size;
}

h4, .h4 {
	font-size: $h4-font-size;
}

h5, .h5 {
	font-size: $h5-font-size;
}

h6, .h6 {
	font-size: $h6-font-size;
}*/
p {
  margin: 0 0 1em; }

a {
  color: #f78f1e;
  text-decoration: none; }
  a:hover {
    text-decoration: underline; }

form,
fieldset {
  margin: 0;
  padding: 0;
  border-style: none; }

input[type='text'],
input[type='tel'],
input[type='email'],
input[type='search'],
input[type='password'],
textarea {
  color: #2b2b2b;
  -webkit-appearance: none;
  -webkit-border-radius: 0;
  box-sizing: border-box;
  display: block;
  background: rgba(255, 255, 255, 0.3);
  border: 1px solid rgba(235, 235, 235, 0.6);
  padding: 5px 10px;
  font-size: 23px;
  line-height: 30px;
  height: 42px;
  width: 100%;
  margin: 0;
  outline: none;
  box-shadow: none;
  transition: border 0.3s; }
  input[type='text']::-webkit-input-placeholder,
  input[type='tel']::-webkit-input-placeholder,
  input[type='email']::-webkit-input-placeholder,
  input[type='search']::-webkit-input-placeholder,
  input[type='password']::-webkit-input-placeholder,
  textarea::-webkit-input-placeholder {
    color: #ebebeb; }
  input[type='text']::-moz-placeholder,
  input[type='tel']::-moz-placeholder,
  input[type='email']::-moz-placeholder,
  input[type='search']::-moz-placeholder,
  input[type='password']::-moz-placeholder,
  textarea::-moz-placeholder {
    opacity: 1;
    color: #ebebeb; }
  input[type='text']:-moz-placeholder,
  input[type='tel']:-moz-placeholder,
  input[type='email']:-moz-placeholder,
  input[type='search']:-moz-placeholder,
  input[type='password']:-moz-placeholder,
  textarea:-moz-placeholder {
    color: #ebebeb; }
  input[type='text']:-ms-input-placeholder,
  input[type='tel']:-ms-input-placeholder,
  input[type='email']:-ms-input-placeholder,
  input[type='search']:-ms-input-placeholder,
  input[type='password']:-ms-input-placeholder,
  textarea:-ms-input-placeholder {
    color: #ebebeb; }
  input[type='text'].placeholder,
  input[type='tel'].placeholder,
  input[type='email'].placeholder,
  input[type='search'].placeholder,
  input[type='password'].placeholder,
  textarea.placeholder {
    color: #ebebeb; }

select {
  -webkit-border-radius: 0; }
  select .hideme {
    display: none; }

textarea {
  resize: vertical;
  vertical-align: top;
  height: 150px;
  min-height: 120px; }

button,
input[type='button'],
input[type='reset'],
input[type='file'],
input[type='submit'] {
  -webkit-appearance: none;
  -webkit-border-radius: 0;
  cursor: pointer; }

.icon {
  background: url("images/icons-sprite.png") no-repeat -9999px -9999px;
  display: inline-block;
  vertical-align: top; }

@font-face {
  font-family: 'Futura Std';
  src: url("fonts/futurastd-book.otf");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Futura Std';
  src: url("fonts/futurastd-light.otf");
  font-weight: 300;
  font-style: normal; }

.widget + .widget {
  margin: 17px 0 0; }

.widget.tile {
  background-size: cover;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: space-between;
  align-content: flex-start;
  align-items: flex-start;
  color: #fff;
  font: 20px/1.2 "Futura Std", "Open Sans", "Arial", "Helvetica Neue", "Helvetica", sans-serif;
  min-height: 99px;
  padding: 14px 17px 16px; }
  .widget.tile.profile {
    background: #b9d0dd;
    font-size: 17px;
    font-weight: 300;
    justify-content: flex-start;
    letter-spacing: -0.025em;
    padding: 15px 13px 16px; }
    .widget.tile.profile > div:last-child {
      text-align: left; }
    .widget.tile.profile .avatar {
      margin: 0 14px 0 0;
      max-width: 119px;
      min-width: 119px; }
    .widget.tile.profile .title {
      display: block;
      font-size: 27px;
      font-weight: normal;
      letter-spacing: 0.02em;
      margin: -5px 0 -3px;
      text-transform: uppercase; }
    .widget.tile.profile p {
      margin: 0; }
  .widget.tile.shopping {
    background: url("images/img02.jpg") no-repeat 50% 50%; }
  .widget.tile.budget {
    background: url("images/img03.jpg") no-repeat 50% 50%; }
  .widget.tile.badges {
    background: url("images/img04.jpg") no-repeat 50% 50%; }
  .widget.tile.awards {
    background: url("images/img05.jpg") no-repeat 50% 50%; }
  .widget.tile.quizzes {
    background: url("images/img06.jpg") no-repeat 50% 50%; }
  .widget.tile.form {
    background: url("images/img07.jpg") no-repeat 50% 50%;
    flex-direction: column;
    justify-content: flex-start;
    align-content: stretch;
    align-items: stretch; }
  .widget.tile > div:last-child {
    text-align: right; }
  .widget.tile .title {
    display: block;
    font-family: "Futura Std", "Open Sans", "Arial", "Helvetica Neue", "Helvetica", sans-serif;
    font-size: 23px;
    font-weight: normal; }
    .widget.tile .title a {
      color: inherit; }
      .widget.tile .title a:hover {
        color: #f78f1e;
        text-decoration: none; }
  .widget.tile .counter {
    font-size: 20px;
    font-weight: 300; }
    .widget.tile .counter .value {
      display: block;
      font-size: 36px;
      max-resolution: 2px 0 0; }
  .widget.tile .icon {
    margin: 4px -1px 0 0; }
  .widget.tile .icon-star {
    background-position: 0 -150px;
    height: 61px;
    width: 56px; }
  .widget.tile .icon-cup {
    background-position: 0 -250px;
    height: 57px;
    width: 53px; }
  .widget.tile .icon-lamp {
    background-position: 0 -350px;
    height: 62px;
    width: 57px; }
  .widget.tile form {
    margin: 7px 0 0; }
    .widget.tile form input[type=email] {
      height: 32px;
      padding-top: 0;
      padding-bottom: 0; }

#header {
  padding: 29px 0 30px; }
  #header > .container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-content: center;
    align-items: center; }
  #header .col {
    width: 50%; }
    #header .col.nav-holder {
      padding: 66px 0 0;
      width: 100%; }

.contacts-list {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-end;
  align-content: center;
  align-items: center;
  font-size: 0;
  line-height: 0;
  padding: 0 6px 0 0; }
  .contacts-list > li {
    padding: 0 0 0 21px; }
  .contacts-list .icon-email {
    background-position: 0 0;
    height: 22px;
    width: 32px; }
  .contacts-list .icon-approvals {
    background-position: 0 -50px;
    height: 25px;
    width: 31px; }
  .contacts-list .icon-phone {
    background-position: 0 -100px;
    height: 30px;
    width: 26px; }

#nav {
  color: #4c505c;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  align-content: flex-start;
  align-items: flex-start;
  font: 33px/1.1364 "Futura Std", "Open Sans", "Arial", "Helvetica Neue", "Helvetica", sans-serif;
  text-transform: uppercase; }
  #nav > li.active > a, #nav > li:hover > a {
    color: #f78f1e;
    text-decoration: none; }
  #nav > li > a {
    color: inherit; }

#wrapper {
  background: url("images/bg01.jpg") no-repeat 100% 0;
  max-width: 1616px; }

.container {
  margin: 0 auto;
  max-width: 1616px;
  padding-right: 20px;
  padding-left: 20px; }

.page-heading {
  color: #959494;
  margin: 0 auto;
  max-width: 1220px;
  overflow: hidden;
  padding: 0 20px 10px; }
  .page-heading .title {
    display: inline-block;
    vertical-align: top;
    font-size: 23px;
    font-weight: normal;
    letter-spacing: 0.05em;
    line-height: 1.2609;
    position: relative; }
    .page-heading .title:before {
      background: rgba(76, 80, 92, 0.2);
      bottom: 0;
      content: '';
      left: 100%;
      margin: 0 0 0 18px;
      position: absolute;
      top: -1px;
      width: 400%; }

.section-recognize .twocolumns {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: flex-start;
  align-content: flex-start;
  align-items: flex-start;
  padding: 30px 0 50px; }
  .section-recognize .twocolumns > div {
    padding: 0 20px; }
  .section-recognize .twocolumns .content-holder {
    flex: 1 1 auto; }
  .section-recognize .twocolumns .aside-holder {
    order: -1;
    min-width: calc(372px + 40px);
    max-width: calc(372px + 40px); }

.section-recognize .content {
  margin: -8px 0 0; }

.section-recognize .users-group {
  line-height: 1; }
  .section-recognize .users-group .title {
    display: block;
    font-weight: normal;
    margin: 0 0 18px; }
  .section-recognize .users-group ul {
    background: rgba(255, 255, 255, 0.6);
    border: 2px solid rgba(235, 235, 235, 0.6);
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-content: flex-start;
    align-items: flex-start;
    padding: 2px; }
    .section-recognize .users-group ul li {
      padding: 0 5px 0 0; }
    .section-recognize .users-group ul a {
      background: rgba(94, 106, 119, 0.5);
      color: #fff;
      display: inline-block;
      vertical-align: top;
      font-weight: normal;
      padding: 7px 32px 8px 8px;
      position: relative; }
      .section-recognize .users-group ul a:hover {
        background: #5e6a77;
        text-decoration: none; }
      .section-recognize .users-group ul a:before {
        content: 'x';
        line-height: 1;
        margin: -2px 0 0;
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
